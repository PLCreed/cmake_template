---
# 配置clang-tidy配置检测项,带'-'前缀的为disable对应的检测,否则为开启。这里主要是关闭一些用处不大,或者存在bug、假阳性的检查项
Checks: "*,
  -llvm-*,
  -llvmlibc-*,
  -altera-*,
  -android-*,
  -boost-*,
  -darwin-*,
  -fuchsia-*,
  -linuxkernel-*,
  -objc-*,
  -portability-*,
  -zircon-*,
  -clang-analyzer-osx*,
  -clang-analyzer-optin.cplusplus.UninitializedObject,
  -clang-analyzer-optin.cplusplus.VirtualCall,
  -clang-analyzer-core.NullDereference,
  -clang-analyzer-cplusplus.NewDelete,
  -clang-analyzer-cplusplus.PlacementNew,
  -clang-analyzer-cplusplus.NewDeleteLeaks,
  -clang-analyzer-cplusplus.Move,
  -clang-diagnostic-unused-parameter,
  -cppcoreguidelines-*,
  cppcoreguidelines-explicit-virtual-functions,
  cppcoreguidelines-special-member-functions,
  -cert-err58-cpp,
  -cert-env33-c,
  -cert-dcl37-c,
  -cert-dcl51-cpp,
  -google-runtime-int,
  -google-readability-casting,
  -google-readability-function-size,
  -google-readability-todo,
  -google-readability-braces-around-statements,
  -google-build-using-namespace,
  -readability-magic-numbers,
  -readability-implicit-bool-conversion,
  -readability-function-cognitive-complexity,
  -readability-isolate-declaration,
  -readability-convert-member-functions-to-static,
  -readability-container-size-empty,
  -readability-function-size,
  -readability-qualified-auto,
  -readability-make-member-function-const,
  -readability-named-parameter,
  -modernize-use-trailing-return-type,
  -modernize-avoid-c-arrays,
  -modernize-use-nullptr,
  -modernize-replace-disallow-copy-and-assign-macro,
  -modernize-use-bool-literals,
  -modernize-use-equals-default,
  -modernize-use-default-member-init,
  -modernize-use-auto,
  -modernize-loop-convert,
  -modernize-deprecated-headers,
  -modernize-raw-string-literal,
  -misc-no-recursion,
  -misc-unused-parameters,
  -misc-redundant-expression,
  -misc-non-private-member-variables-in-classes,
  -hicpp-*,
  hicpp-exception-baseclass,
  -performance-no-int-to-ptr,
  -bugprone-easily-swappable-parameters,
  -bugprone-implicit-widening-of-multiplication-result,
  -bugprone-integer-division,
  -bugprone-exception-escape,
  -bugprone-reserved-identifier,
  -bugprone-branch-clone,
  -bugprone-narrowing-conversions,
  -readability-identifier-length"

# 将警告转为错误
# WarningsAsErrors: "*,-misc-non-private-member-variables-in-classes"
WarningsAsErrors: ""
FormatStyle: none
# 过滤检查哪些头文件,clang-tidy会把源码依赖的头文件列出来都检查一遍,所以要屏蔽大量第三方库中的头文件
# 参考 https://stackoverflow.com/questions/71797349/is-it-possible-to-ignore-a-header-with-clang-tidy
# 该正则表达式引擎为llvm::Regex,支持的表达式较少,(?!xx)负向查找等都不支持
HeaderFilterRegex: '(xxx/include)*\.h$'
# 具体一些检查项的配置参数,可以参考的:
# https://github.com/envoyproxy/envoy/blob/main/.clang-tidy
# https://github.com/ClickHouse/ClickHouse/blob/d1d2f2c1a4979d17b7d58f591f56346bc79278f8/.clang-tidy
CheckOptions:
  ###################### Readability naming ######################################
  # Setup for testing fallback behavior for naming
  # in each category, anything lower should fallback to something above it
  # Fallback is not necessarily to what is directly above
  # If any of Case/Prefix/Suffix are specified, all three are used; fallback stops
  # this means if you override the case and you want to keep the suffix, you have to
  # copy the suffix from the fallback

  ## clang可识别支持的有以下几种命名法,常见的都支持:
  # 小写: lower_case
  # 大写: UPPER_CASE
  # 小驼峰: camelBack
  # 大坨峰: CamelCase
  # 小写驼峰蛇形: camel_Snake_Back
  # 大写驼峰蛇形: Camel_Snake_Case
  # 任何格式: aNy_CasE

  # 结构体及自由函数: lower_case
  # 成员变量: lower_case + 后缀_
  # 类名:  CamelCase
  # 宏定义及枚举: UPPER_CASE
  # 类方法: camelBack
  # 全局变量: g前缀 + CamelCase
  # 常量: k前缀 + CamelCase
  # 局部变量: camelBack

  ################ Variables
  ## Variable does not fall back
  #- key: readability-identifier-naming.VariableCase
  #  value: lower_case
  #- key: readability-identifier-naming.VariablePrefix
  #  value: ''
  #- key: readability-identifier-naming.VariableSuffix
  #  value: ''
  ## Constant falls back to Variable
  # - key: readability-identifier-naming.ConstantCase
  #   value: CamelCase
  # - key: readability-identifier-naming.ConstantPrefix
  #   value: ''
  # - key: readability-identifier-naming.ConstantSuffix
  #   value: ''

  #####
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE

  ##### Globals
  ## GlobalVariable falls back to Variable
  - key: readability-identifier-naming.GlobalVariableCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalVariablePrefix
    value: g
  #- key: readability-identifier-naming.GlobalVariableSuffix
  #  value: ''
  ## GlobalPointer falls back to GlobalVariable
  - key: readability-identifier-naming.GlobalPointerCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalPointerPrefix
    value: g
  - key: readability-identifier-naming.GlobalPointerSuffix
    value: Ptr
  ## GlobalConstantCase falls back to ConstantVariable then GlobalVariable
  - key: readability-identifier-naming.GlobalConstantCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: k
  #- key: readability-identifier-naming.GlobalConstantSuffix
  #  value: ''
  ## GlobalConstantPointer falls back to GlobalConstant
  - key: readability-identifier-naming.GlobalConstantPointerCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantPointerPrefix
    value: k
  - key: readability-identifier-naming.GlobalConstantPointerSuffix
    value: Ptr

  ##### Members
  ## Member does not fall back
  #- key: readability-identifier-naming.MemberCase
  #  value: lower_case
  #- key: readability-identifier-naming.MemberPrefix
  #  value: ''
  #- key: readability-identifier-naming.MemberSuffix
  #  value: ''
  ## ClassMember falls back to GlobalVariable
  - key: readability-identifier-naming.ClassMemberCase
    value: lower_case
  #- key: readability-identifier-naming.ClassMemberPrefix
  #  value: ''
  - key: readability-identifier-naming.ClassMemberSuffix
    value: _
  ## PrivateMember falls back Member
  - key: readability-identifier-naming.PrivateMemberCase
    value: lower_case
  #- key: readability-identifier-naming.PrivateMemberPrefix
  #  value: ''
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  ## ProtectedMember falls back to Member
  - key: readability-identifier-naming.ProtectedMemberCase
    value: lower_case
  #- key: readability-identifier-naming.ProtectedMemberPrefix
  #  value: ''
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: _
  ## PublicMember falls back to Member
  - key: readability-identifier-naming.PublicMemberCase
    value: lower_case
  #- key: readability-identifier-naming.PublicMemberPrefix
  #  value: ''
  #- key: readability-identifier-naming.PublicMemberSuffix
  #  value: ''
  ## ClassConstant falls back to GlobalConstant then ClassMember
  #- key: readability-identifier-naming.ClassConstantCase
  #  value: lower_case
  #- key: readability-identifier-naming.ClassConstantPrefix
  #  value: ''
  #- key: readability-identifier-naming.ClassConstantSuffix
  #  value: ''
  ## ConstantMember falls back to ConstantVariable then Public/Private/Protected/Member
  - key: readability-identifier-naming.ConstantMemberCase
    value: lower_case
  - key: readability-identifier-naming.ConstantMemberPrefix
    value: k_
  #- key: readability-identifier-naming.ConstantMemberSuffix
  #  value: ''
  ## ConstexprVariable will fall back to ClassConstant or GlobalVariable depending on context
  - key: readability-identifier-naming.ConstexprVariableCase
    value: lower_case
  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k_
  #- key: readability-identifier-naming.ConstexprVariableSuffix
  #  value: ''

  ##### Locals
  ## LocalVariable falls back to Variable
  - key: readability-identifier-naming.LocalVariableCase
    value: camelBack
  #- key: readability-identifier-naming.LocalVariablePrefix
  #  value: ''
  #- key: readability-identifier-naming.LocalVariableSuffix
  #  value: ''
  ## LocalPointer falls back to LocalVariable
  - key: readability-identifier-naming.LocalPointerCase
    value: camelBack
  #- key: readability-identifier-naming.LocalPointerPrefix
  #  value: ''
  - key: readability-identifier-naming.LocalPointerSuffix
    value: Ptr
  ## LocalConstant falls back to LocalVariable
  - key: readability-identifier-naming.LocalConstantCase
    value: CamelCase
  - key: readability-identifier-naming.LocalConstantPrefix
    value: k
  #- key: readability-identifier-naming.LocalConstantSuffix
  #  value: ''
  ## LocalConstantPointer falls back to LocalConstant then LocalPointer
  - key: readability-identifier-naming.LocalConstantPointerCase
    value: CamelCase
  - key: readability-identifier-naming.LocalConstantPointerPrefix
    value: k
  - key: readability-identifier-naming.LocalConstantPointerSuffix
    value: Ptr
  ## StaticVariable falls back to LocalVariable
  - key: readability-identifier-naming.StaticVariableCase
    value: CamelCase
  - key: readability-identifier-naming.StaticVariablePrefix
    value: s
  #- key: readability-identifier-naming.StaticVariableSuffix
  #  value: ''
  ## StaticConstant falls back to LocalConstant then StaticeVariable
  - key: readability-identifier-naming.StaticConstantCase
    value: CamelCase
  - key: readability-identifier-naming.StaticConstantPrefix
    value: k
  #- key: readability-identifier-naming.StaticConstantSuffix
  #  value: ''

  ################# Enum
  ## Enum does not fallback
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  #- key: readability-identifier-naming.EnumPrefix
  #  value: ''
  #- key: readability-identifier-naming.EnumSuffix
  #  value: ''
  ## EnumConstant does not fallback
  - key: readability-identifier-naming.EnumConstantCase
    value: UPPER_CASE
  #- key: readability-identifier-naming.EnumConstantPrefix
  #  value: ''
  #- key: readability-identifier-naming.EnumConstantSuffix
  #  value: ''

  ################# Classes
  ## Struct does not fall back
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  #- key: readability-identifier-naming.StructPrefix
  #  value: ''
  #- key: readability-identifier-naming.StructSuffix
  #  value: ''
  ## Class falls back to Struct
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  #- key: readability-identifier-naming.ClassPrefix
  #  value: ''
  #- key: readability-identifier-naming.ClassSuffix
  #  value: ''
  ## AbstractClass falls back to Class
  - key: readability-identifier-naming.AbstractClassCase
    value: CamelCase
  #- key: readability-identifier-naming.AbstractClassPrefix
  #  value: ''
  #- key: readability-identifier-naming.AbstractClassSuffix
  #  value: ''

  ################# Functions
  ## Function does not fall back
  - key: readability-identifier-naming.FunctionCase
    value: aNy_CasE
  #- key: readability-identifier-naming.FunctionPrefix
  #  value: ''
  #- key: readability-identifier-naming.FunctionSuffix
  #  value: ''
  ## GlobalFunction falls back to Function
  #- key: readability-identifier-naming.GlobalFunctionCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.GlobalFunctionPrefix
  #  value: ''
  #- key: readability-identifier-naming.GlobalFunctionSuffix
  #  value: ''
  ## ConstexprFunction falls back to GlobalFunction
  #- key: readability-identifier-naming.ConstexprFunctionCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.ConstexprFunctionPrefix
  #  value: ''
  #- key: readability-identifier-naming.ConstexprFunctionSuffix
  #  value: ''
  ## Method falls back to Function
  #- key: readability-identifier-naming.MethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.MethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.MethodSuffix
  #  value: ''
  ## ClassMethod fall back to GlobalFunction
  #- key: readability-identifier-naming.ClassMethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.ClassMethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.ClassMethodSuffix
  #  value: ''
  ## ConstexprMethod falls back to ConstexprFunction
  #- key: readability-identifier-naming.ConstexprMethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.ConstexprMethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.ConstexprMethodSuffix
  #  value: ''
  ## PrivateMethod falls back to Method
  #- key: readability-identifier-naming.PrivateMethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.PrivateMethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.PrivateMethodSuffix
  #  value:''
  ## ProtectedMethod falls back to Method
  #- key: readability-identifier-naming.ProtectedMethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.ProtectedMethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.ProtectedMethodSuffix
  #  value: ''
  ## PublicMethod falls back to Method
  #- key: readability-identifier-naming.PublicMethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.PublicMethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.PublicMethodSuffix
  #  value: ''
  ## VirtualMethod will fall back to Private/Protected/PublicMethod
  #- key: readability-identifier-naming.VirtualMethodCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.VirtualMethodPrefix
  #  value: ''
  #- key: readability-identifier-naming.VirtualMethodSuffix
  #  value: ''

  ################# Parameters
  ## Parameter does not fallback
  - key: readability-identifier-naming.ParameterCase
    value: aNy_CasE
  #- key: readability-identifier-naming.ParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.ParameterSuffix
  #  value: ''
  ## ConstantParameter falls back to Parameter
  #- key: readability-identifier-naming.ConstantParameterCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.ConstantParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.ConstantParameterSuffix
  #  value: ''
  ## PointerParameter does not fallback
  #- key: readability-identifier-naming.PointerParameterCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.PointerParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.PointerParameterSuffix
  #  value: ''
  ## ConstantPointerParameter falls back to ConstantParameter then PointerParameter
  #- key: readability-identifier-naming.ConstantPointerParameterCase
  #  value: aNy_CasE
  #- key: readability-identifier-naming.ConstantPointerParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.ConstantPointerParameterSuffix
  #  value: ''

  ################# Template
  ## ParameterPack does not fall back
  #- key: readability-identifier-naming.ParameterPackCase
  #  value: lower_case
  #- key: readability-identifier-naming.ParameterPackPrefix
  #  value: ''
  #- key: readability-identifier-naming.ParameterPackSuffix
  #  value: ''
  ## TemplateParameter does not fall back
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  #- key: readability-identifier-naming.TemplateParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.TemplateParameterSuffix
  #  value: ''
  ## TemplateTemplateParameter falls back to TemplateParameter
  #- key: readability-identifier-naming.TemplateTemplateParameterCase
  #  value: lower_case
  #- key: readability-identifier-naming.TemplateTemplateParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.TemplateTemplateParameterSuffix
  #  value: ''
  ## TypeTemplateParameter falls back to TemplateParameter
  #- key: readability-identifier-naming.TypeTemplateParameterCase
  #  value: lower_case
  #- key: readability-identifier-naming.TypeTemplateParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.TypeTemplateParameterSuffix
  #  value: ''
  ## ValueTemplateParameter falls back to TemplateParameter
  #- key: readability-identifier-naming.ValueTemplateParameterCase
  #  value: lower_case
  #- key: readability-identifier-naming.ValueTemplateParameterPrefix
  #  value: ''
  #- key: readability-identifier-naming.ValueTemplateParameterSuffix
  #  value: ''

  ################# Other
  ## TypeAlias does not fall back
  #- key: readability-identifier-naming.TypeAliasCase
  #  value: CamelCase
  #- key: readability-identifier-naming.TypeAliasPrefix
  #  value: ''
  #- key: readability-identifier-naming.TypeAliasSuffix
  #  value: ''
  ## Typedef does not fall back
  #- key: readability-identifier-naming.TypedefCase
  #  value: CamelCase
  #- key: readability-identifier-naming.TypedefPrefix
  #  value: ''
  #- key: readability-identifier-naming.TypedefSuffix
  #  value: ''
  ## Union does not fall back
  #- key: readability-identifier-naming.UnionCase
  #  value: CamelCase
  #- key: readability-identifier-naming.UnionPrefix
  #  value: ''
  #- key: readability-identifier-naming.UnionSuffix
  #  value: ''
  ## Namespace does not fall back
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  #- key: readability-identifier-naming.NamespacePrefix
  #  value: ''
  #- key: readability-identifier-naming.NamespaceSuffix
  #  value: ''
  ## InlineNamespace falls back to Namespace
  #- key: readability-identifier-naming.InlineNamespaceCase
  #  value: lower_case
  #- key: readability-identifier-naming.InlineNamespacePrefix
  #  value: ''
  #- key: readability-identifier-naming.InlineNamespaceSuffix
  #  value: ''

  ################# Ignore GoogleTest function macros.
  - key: readability-identifier-naming.FunctionIgnoredRegexp
    value: "(TEST|TEST_F|TEST_P|INSTANTIATE_TEST_SUITE_P|MOCK_METHOD|TYPED_TEST)"
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: 0
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: 1
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions
    value: 1
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted
    value: 1
  ################################################################################
